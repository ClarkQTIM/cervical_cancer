Structure of Prediction Output
-experiment_dir
--checkpoints
---Checkpoint for each epoch
--best_metric_model.pth -> Best model
-- params.json -> Parameter dictionary. This *must* be in the folder before training/inference.
--predictions_validation.csv -> The results on the validation set (Training only)
--predictions.csv -> The results on the training data
--split_df.csv -> The splits used for training/inference
--train_record.json -> Experiment parameters

Experiments/Training/Inference Run:

7/28: Ran Diagnostic classifier on DR images, which we don't have ground truths for. We used this code to do so:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/predictions/test_dr -p /mnt/models/SRA_20210827_36/params.json -d /mnt/data/SRA_IRIS_DR -c /mnt/data/SRA_dr_curated_bb_via.csv -ic MASKED_IMG_ID -lc label -test -n 3
Note that upon setting up the docker container, we ran into an issue with the gpu, so we changed the line I need to figure out how to get the gpu on my machine to be recognized by docker. For now, we changed the params.json line "device": "cpu".

7/31: Ran Diagnostic classifier on Cambodia images, which we don't have ground truths for. We used this code to do so:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/predictions/test_cambodia -p /mnt/models/SRA_20210827_36/params.json -d /mnt/data/SRA_IRIS_cambodia -c /mnt/data/SRA_cambodia_curated_bb_via.csv -ic image -lc label -test -n 3

10/3:
To run diagnostic *training* we do:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/predictions/full_dataset_training_vitmae_huge_unfinetuned -p /mnt/predictions/test_full_dataset_training_vitmae_huge_unfinetuned/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/data/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3

10/6: 
For the individual study trainings:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/predictions/full_dataset_training_vitmae_huge_unfinetuned_NHS -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/data/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3
Be sure to change the "data_origin" in the params file you're calling ('/mnt/cervical_cancer/json_files/params_chris.json', in this case)

10/8:
Ran training on fine-tuned version of ViTMAE
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/predictions/full_dataset_training_vitmae_huge_finetuned -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/data/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3

10/9:
Ran inference on "test2" by taking the model_36_split_df_all_gt.csv and creating a second model_36_split_df_test_2_gt.csv where we removed
anything that was "test" in the "dataset" column and replacing the leftover "test2" with test, and then setting the '-test' flag. The command is:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/predictions/full_dataset_inference_test2_vitmae_huge_finetuned_ALTS -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/data/model_36_split_df_test_2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -test

10/9:
So, at this point, we have the following training directories. Note that these have the inference on 'val' and 'test'.
full_dataset_training_vitmae_huge_finetuned -> Finetuned on full_dataset_duke_liger_itoju_5StLowQual
full_dataset_training_vitmae_huge_finetuned_NHS -> Finetuned on full_dataset_duke_liger_itoju_5StLowQual and classification trained on only NHS
full_dataset_training_vitmae_huge_finetuned_ALTS -> Finetuned on full_dataset_duke_liger_itoju_5StLowQual and classification trained on only ALTS
full_dataset_training_vitmae_huge_unfinetuned -> 'facebook/vit-mae-huge' finetuned on ImageNet
full_dataset_training_vitmae_huge_unfinetuned_NHS -> 'facebook/vit-mae-huge' finetuned on ImageNet and classification trained on only NHS
full_dataset_training_vitmae_huge_unfinetuned_ALTS -> 'facebook/vit-mae-huge' finetuned on ImageNet and classification trained on only ALTS

We also have the following inference directories specifically for 'test2'. Note that these are not trained, just inference on 'test2'. 
So, we are NOT going to give them a checkpoint in the params file, but put the best_metric_model.pth from training.
full_dataset_inference_test2_vitmae_huge_finetuned -> best_metric_model.pth came from full_dataset_training_vitmae_huge_finetuned
full_dataset_inference_test2_vitmae_huge_finetuned_NHS -> best_metric_model.pth came from full_dataset_training_vitmae_huge_finetuned_NHS
full_dataset_inference_test2_vitmae_huge_finetuned_ALTS -> best_metric_model.pth came from full_dataset_training_vitmae_huge_finetuned_ALTS
full_dataset_inference_test2_vitmae_huge_unfinetuned -> best_metric_model.pth came from full_dataset_training_vitmae_huge_unfinetuned
full_dataset_inference_test2_vitmae_huge_unfinetuned_NHS -> best_metric_model.pth came from full_dataset_training_vitmae_huge_unfinetuned_NHS
full_dataset_inference_test2_vitmae_huge_unfinetuned_ALTS -> best_metric_model.pth came from full_dataset_training_vitmae_huge_unfinetuned_ALTS


10/10: We added where we can use the augmentations, so we are going to re-run two of them, the un-fine-tuned and the fine-tuned. /mnt/models/Facebook_Huge_Cervix_Custom_Finetune_v2_Cont_best_epoch.pth
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_training_vitmae_huge_finetuned_augs -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/data/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3
Thus, we have:
full_dataset_training_vitmae_huge_finetuned_augs -> Finetuned on full_dataset_duke_liger_itoju_5StLowQual with augmentations
full_dataset_training_vitmae_huge_unfinetuned_augs -> 'facebook/vit-mae-huge' finetuned on ImageNet with augmentations

10/11: We ran inference on test2 for the un- and fine-tuned versions of ViTMAE will all the data for downstream (no NHS or ALTS) using the following script:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_inference_test2_vitmae_huge_unfinetuned_augs -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/data/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -test
Thus we have:
full_dataset_inference_test2_vitmae_huge_unfinetuned_augs -> best_metric_model.pth came from full_dataset_training_vitmae_huge_unfinetuned
full_dataset_inference_test2_vitmae_huge_finetuned_augs -> best_metric_model.pth came from full_dataset_training_vitmae_huge_finetuned

10/12:
Reran two models (finetuned and not) with the -mp flag set so we can get some training metrics out of it. The commands we used were:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_training_vitmae_huge_finetuned_metrics -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

10/16: 
Running a vit classification model trained on ImageNet (This is NOT a SSL pipeline, standard supervised classification).
We are using the following command:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_vit_huge_downstream -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

10/16: 
Re-running vitmae un/fine-tuned called full_dataset_training_vitmae_huge_un/finetuned_300 with the following:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_training_vitmae_huge_finetuned_300 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

And the vit classification model trained on ImageNet (This is NOT a SSL pipeline, standard supervised classification) with 300 epochs
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_vit_huge_downstream_300 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

10/17:
We are going to run inference on test2 with the non-SSL ViT using this command:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_vit_downstream_inference_test2 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -test
The 'best_model' is /mnt/cervical_cancer/predictions/full_dataset_vit_huge_downstream/best_metric_model.pth

10/18:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_inference_test2_vitmae_huge_finetuned_300 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -test

10/19:
Running inference on full_dataset_inference_test2_vitmae_huge_finetuned_300 but with the LAST model, not the best, as the metric peaked at epoch 43,
but didn't really SATURATE until much later. So, we are running this command after replacing the best model with the last checkpoint's model:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_inference_test2_vitmae_huge_finetuned_300_final_epoch -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -test
Note that we changed the following line in evaluate.py:
best_model_path = os.path.join(output_path, "checkpoint299.pth")
We have since changed it back.

We are then going to do some linear probing with the finetuned model. We added the following the model.py script:

        if "lin_probing" in model_type: # If we are doing Linear Probing, we are freezing everything but the final, classification layer
            for name, param in model.named_parameters():
                if 'classifier' not in name:  # Freeze all layers except the classifier (final linear layer)
                    param.requires_grad = False
                else:
                    print(name, param)

We also changed the get_model_type_params in this line:

elif 'classification' in model_type:

We are using the following command:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/full_dataset_training_vitmae_huge_finetuned_linear_probing -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

We are then going to start with a blank (only initialized) ViTMAE model and fine-tune it FROM SCRATCH on the cervical data. This will happen in
the SSL project folder.

10/23:
We are going to run the downstream classification task on the from-scratch ViTMAE fine-tuned for reconstruction ONLY ON CERVICAL DATA.
As is, we are NOT loading in ImageNet weights, but reinitializing. This is in vitmae_huge_from_scratch_finetuned_on_full_dataset_training.
We put Facebook_Huge_Cervix_Custom_From_Scratch_best_epoch as the checkpoint in params_chris.json. 
We are using the following command:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/vitmae_huge_from_scratch_finetuned_on_full_dataset_training -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

We then ran the inference on test2 with:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/vitmae_huge_from_scratch_finetuned_on_full_dataset_inference_test2 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -test

10/25:
We are going to try this with a DINOv2 model with the "facebook/dinov2-giant-imagenet1k-1-layer" architecture.
We are going to use the following command:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov2_classifier_downstream -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

10/26: 
We are going to run inference on test2 with the dinvo2 using this command:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov2_classifier_inference_test2 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp -test

We are going to run a series of partial trainings using the following as a template:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/vitmae_finetuned_partial_training_model_36_0_3 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/partial_trainings/model_36_split_df_0_3.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp
and:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/vitmae_finetuned_partial_training_split_df_47_ii_add_26 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/partial_trainings/split_df_47_ii_add_26.csv -ic MASKED_IMG_ID -lc DC_label -n 3 -mp
Note that for csvs that start with model_36:

-ic MASKED_IMG_ID -lc CC_ST

for csvs that start with split_df:

-ic MASKED_IMG_ID -lc DC_label

I am doing 100 epochs on each. 

10/30: 
Up to now, we have only the TRAINING on vitmae_finetuned_partial_training_model_36_0_3 and vitmae_finetuned_partial_training_model_36_0_5.
So, we need to run inference on them and more training.

10/30:
Issues with DINOv2. We are going to figure out what is going on.

10/31:
We are running inference of test2 on vitmae_finetuned_partial_training_model_36_0_3 and vitmae_finetuned_partial_training_model_36_0_5 using the following commands:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/vitmae_finetuned_partial_training_model_36_0_5_inference_test2 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/partial_trainings/model_36_split_df_0_3.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp -test

11/1: Note, to make the DINO dataloading work, we had to remove the J8 from the full_dataset_duke_liger_itoju_5StLowQual and then put full_dataset_duke_liger_itoju_5StLowQual
inside another folder, full_dataset. So, we now need to change -d /mnt/data/full_dataset_duke_liger_itoju_5StLowQual to -d /mnt/data/full_dataset/full_dataset_duke_liger_itoju_5StLowQual
and maybe add J8 back if we need to.

11/1:
We are going to begin training on the DINOv1 unfinetuned (while the fine-tuning is going on)
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov1_resnet50_unfinetuned_downstream -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

We are going to redo the DINOv2 training with 1e-07 learning rate with this command:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov2_classifier_downstream_v2 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

11/2:
So, the evaluation.py had a line incompatible with dino, which we fixed, and we only ran it for 75 epochs. So, we are going to continue
our training. This means just running the same thing, but giving the chkpt_path as the LAST (not the best) checkpoint from the first training.
This is /mnt/cervical_cancer/predictions/dinov1_resnet50_unfinetuned_downstream/checkpoints/checkpoint74.pth
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov1_resnet50_unfinetuned_downstream_cont -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

11/2:
We cleaned up and combined our dinov1 and dinov1_cont so there is only one directory for it.
Now, we are going to run inference on dinov1_unfinetuned and dinov2 with:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov1_resnet50_unfinetuned_inference_test2 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp -test

11/3:
We finished fine-tuning the resnet50 with the DINO method. It is called dino_resnet50_finetuned_full_dataset_duke_liger_itoju_5StLowQual.pth We are going to run training on it with:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov1_resnet50_finetuned_downstream -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/full_dataset_duke_liger_split_df.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp

11/6: 
We reran the above, as we lost access to the gpus. After, we are going to run inference on the finetuned DINOv1 with:
python /mnt/cervical_cancer/gray_zone/run_model.py -o /mnt/cervical_cancer/predictions/dinov1_resnet50_finetuned_inference_test2 -p /mnt/cervical_cancer/json_files/params_chris.json -d /mnt/data/full_dataset/full_dataset_duke_liger_itoju_5StLowQual -c /mnt/cervical_cancer/csvs/model_36_split_df_test2_gt.csv -ic MASKED_IMG_ID -lc CC_ST -n 3 -mp -test